<?xml version="1.0" encoding="UTF-8"?>

<!--
 * See the NOTICE file distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This is free software; you can redistribute it and/or modify it
 * under the terms of the GNU Lesser General Public License as
 * published by the Free Software Foundation; either version 2.1 of
 * the License, or (at your option) any later version.
 *
 * This software is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public
 * License along with this software; if not, write to the Free
 * Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
 * 02110-1301 USA, or see the FSF site: http://www.fsf.org.
-->

<xwikidoc version="1.3" reference="CKEditor.ImageEditorService" locale="">
  <web>CKEditor</web>
  <name>ImageEditorService</name>
  <language/>
  <defaultLanguage/>
  <translation>0</translation>
  <creator>xwiki:XWiki.Admin</creator>
  <creationDate>1648816215000</creationDate>
  <parent>xwiki:CKEditor.WebHome</parent>
  <author>xwiki:XWiki.Admin</author>
  <contentAuthor>xwiki:XWiki.Admin</contentAuthor>
  <date>1648828843000</date>
  <contentUpdateDate>1648828822000</contentUpdateDate>
  <version>1.1</version>
  <title/>
  <comment/>
  <minorEdit>false</minorEdit>
  <syntaxId>xwiki/2.1</syntaxId>
  <hidden>true</hidden>
  <content>{{velocity output='false'}}
#if ($xcontext.action == 'get')
#template('display_macros.vm')
#initRequiredSkinExtensions()
#end
{{/velocity}}

{{velocity}}
##
## Expected request parameters:
## - reference of the image
##
## Check if the default image styles are available.
#if ($services.component.getInstance('org.xwiki.rest.XWikiRestComponent', 'org.xwiki.image.style.rest.internal.DefaultImageStylesResource'))
  #set ($defaultImageStylesActive = true)
#else
  #set ($defaultImageStylesActive = false)
#end
#if ($xcontext.action == 'get')
{{html clean='false'}}
&lt;div&gt;
  &lt;!-- Nav tabs --&gt;
  &lt;ul class="nav nav-tabs" role="tablist"&gt;
    &lt;li role="presentation" class="active"&gt;&lt;a href="#standard" aria-controls="standard" role="tab" data-toggle="tab"&gt;TODO Standard&lt;/a&gt;&lt;/li&gt;
    &lt;li role="presentation"&gt;&lt;a href="#advanced" aria-controls="advanced" role="tab" data-toggle="tab"&gt;TODO Advanced&lt;/a&gt;&lt;/li&gt;
  &lt;/ul&gt;

  &lt;!-- Tab panes --&gt;
  &lt;div class="tab-content"&gt;
    &lt;div role="tabpanel" class="tab-pane active" id="standard"&gt;
     &lt;form class="xform"&gt;
     #if ($defaultImageStylesActive)
       &lt;dl&gt;
        &lt;dt&gt;
          &lt;label for="imageStyles"&gt;TODO Image Styles&lt;/label&gt;
          &lt;span class="xHint"&gt;TODO Select the style to apply on the image.&lt;/span&gt;
        &lt;/dt&gt;
        &lt;dd&gt;
          #set ($discard = $xwiki.linkx.use($services.webjars.url('selectize.js', 'css/selectize.bootstrap3.css'), {'type': 'text/css', 'rel': 'stylesheet'}))
          #set ($discard = $xwiki.ssfx.use('uicomponents/suggest/xwiki.selectize.css', true))
          #set ($discard = $xwiki.jsx.use('CKEditor.ImageEditorService'))
          &lt;select id="imageStyles"&gt;&lt;/select&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
     #end
       &lt;dl&gt;
        &lt;dt&gt;
          &lt;label for="altText"&gt;TODO Alternative Text&lt;/label&gt;
          &lt;span class="xHint"&gt;TODO Define an alternate text for an image, if the image cannot be displayed.&lt;/span&gt;
        &lt;/dt&gt;
        &lt;dd&gt;
          &lt;input id="altText" name="altText" value="" type="text" /&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
      &lt;dl&gt;
        &lt;dt&gt;
          &lt;label for="imageCaption"&gt;TODO Caption&lt;/label&gt;
          &lt;span class="xHint"&gt;TODO Activate and define an image caption.&lt;/span&gt;
        &lt;/dt&gt;
        &lt;dd&gt;
          &lt;div class="input-group"&gt;
            &lt;span class="input-group-addon" name="imageCaptionActivation"/&gt;
              &lt;input type="checkbox" aria-label="TODO Image caption activation checkbox" id="imageCaptionActivation" /&gt;
            &lt;/span&gt;
            &lt;input type="text" class="form-control" aria-label="Image caption text input" id="imageCaption" name="imageCaption" disabled/&gt;
          &lt;/div&gt;&lt;!-- /input-group --&gt;
        &lt;/dd&gt;
      &lt;/dl&gt;
     &lt;/form&gt;
    &lt;/div&gt;
    &lt;div role="tabpanel" class="tab-pane" id="advanced"&gt;
      &lt;form class="xform"&gt;
        &lt;dl&gt;
          &lt;dd&gt;
          &lt;label for="imageAlignment"&gt;TODO Alignment&lt;/label&gt;
          &lt;span class="xHint"&gt;TODO Define the image alignment.&lt;/span&gt;
          &lt;/dd&gt;
          &lt;dt&gt;
          &lt;div class="btn-group" data-toggle="buttons"&gt;
  &lt;label class="btn btn-primary active"&gt;
    &lt;input type="radio" name="options" id="option1" checked&gt; Radio 1 (preselected)
  &lt;/label&gt;
  &lt;label class="btn btn-primary"&gt;
    &lt;input type="radio" name="options" id="option2"&gt; Radio 2
  &lt;/label&gt;
  &lt;label class="btn btn-primary"&gt;
    &lt;input type="radio" name="options" id="option3"&gt; Radio 3
  &lt;/label&gt;
&lt;/div&gt;
          &lt;/dt&gt;
        &lt;/dl&gt;
      &lt;/form&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
{{/html}}
#end
{{/velocity}}

{{velocity output='false'}}
#if ($xcontext.action == 'get')
#getRequiredSkinExtensions($requiredSkinExtensions)
#set ($discard = $response.setHeader('X-XWIKI-HTML-HEAD', $requiredSkinExtensions))
#end
{{/velocity}}</content>
  <object>
    <name>CKEditor.ImageEditorService</name>
    <number>0</number>
    <className>XWiki.JavaScriptExtension</className>
    <guid>89a52b10-7174-4b14-b44b-1b3a0aa51548</guid>
    <class>
      <name>XWiki.JavaScriptExtension</name>
      <customClass/>
      <customMapping/>
      <defaultViewSheet/>
      <defaultEditSheet/>
      <defaultWeb/>
      <nameField/>
      <validationScript/>
      <cache>
        <cache>0</cache>
        <defaultValue>long</defaultValue>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>cache</name>
        <number>5</number>
        <prettyName>Caching policy</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>long|short|default|forbid</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </cache>
      <code>
        <contenttype>PureText</contenttype>
        <disabled>0</disabled>
        <editor>PureText</editor>
        <name>code</name>
        <number>2</number>
        <prettyName>Code</prettyName>
        <rows>20</rows>
        <size>50</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.TextAreaClass</classType>
      </code>
      <name>
        <disabled>0</disabled>
        <name>name</name>
        <number>1</number>
        <prettyName>Name</prettyName>
        <size>30</size>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.StringClass</classType>
      </name>
      <parse>
        <disabled>0</disabled>
        <displayFormType>select</displayFormType>
        <displayType>yesno</displayType>
        <name>parse</name>
        <number>4</number>
        <prettyName>Parse content</prettyName>
        <unmodifiable>0</unmodifiable>
        <classType>com.xpn.xwiki.objects.classes.BooleanClass</classType>
      </parse>
      <use>
        <cache>0</cache>
        <disabled>0</disabled>
        <displayType>select</displayType>
        <freeText>forbidden</freeText>
        <largeStorage>0</largeStorage>
        <multiSelect>0</multiSelect>
        <name>use</name>
        <number>3</number>
        <prettyName>Use this extension</prettyName>
        <relationalStorage>0</relationalStorage>
        <separator> </separator>
        <separators>|, </separators>
        <size>1</size>
        <unmodifiable>0</unmodifiable>
        <values>currentPage|onDemand|always</values>
        <classType>com.xpn.xwiki.objects.classes.StaticListClass</classType>
      </use>
    </class>
    <property>
      <cache>long</cache>
    </property>
    <property>
      <code>require.config({
  paths: {
    'xwiki-selectize': "$xwiki.getSkinFile('uicomponents/suggest/xwiki.selectize.js', true)" +
      "?v=$escapetool.url($xwiki.version)"
  }
});

require(['jquery', 'xwiki-selectize'], function ($) {

  function initImageStyleField() {
    var imageStylesField = $('#imageStyles');
    if (imageStylesField) {
      const restURL = `${XWiki.contextPath}/rest/wikis/${XWiki.currentWiki}/imageStyles`;
      $.getJSON(`${restURL}/default`,
        $.param({'documentReference': XWiki.Model.serialize(XWiki.currentDocument.documentReference)}))
        .done((defaultStyle) =&gt; {
          var settings = {
            preload: true,
            load: function (typedText, callback) {
              $.getJSON(restURL).done((values) =&gt; {
                console.log('&gt;&gt;&gt;', values);
                const imageStyles = values.imageStyles.map((value) =&gt; ({
                  label: value.prettyName,
                  value: value.identifier
                }));
                callback(imageStyles);
                console.log(defaultStyle, 'POUET');
                // Sets the default value once the values are loaded.
                imageStylesField.data('selectize').addItem(defaultStyle.defaultStyle);
              }).fail(callback);
            }
          };

          imageStylesField.xwikiSelectize(settings);
        }).fail((...args) =&gt; {
        // TODO
        console.log('fail', args);
      });
    }
  }

  function initCaptionField() {
    $('#imageCaptionActivation').change(function() {
      console.log('CHANGE', arguments);
      $("#imageCaption").prop('disabled', !this.checked)
    });
  }

  initImageStyleField();
  initCaptionField();

});</code>
    </property>
    <property>
      <name/>
    </property>
    <property>
      <parse>1</parse>
    </property>
    <property>
      <use>onDemand</use>
    </property>
  </object>
</xwikidoc>
